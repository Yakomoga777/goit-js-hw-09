{"mappings":"YAuBA,IAAMA,EAASC,SAASC,cAAc,SAGhCC,GAFQF,SAASC,cAAc,mBAEhBD,SAASC,cAAc,mBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAgBJ,SAASC,cAAc,mBAE7CF,EAAOM,iBAAiB,SAGxB,SAAqBC,G,IAFrBP,EAAOM,iBAAiB,UAMxB,SAAqBC,GACnBA,EAAMC,iBACN,IAAMC,EAAaN,EAAaO,MAC1BC,EAAQP,EAAYM,MACpBE,EAASP,EAAcK,MAE7BG,YAAW,WACT,IAAIC,EAAW,EACXC,EAAQ,EACZA,EAAQC,aAAY,SAAAC,IA9CxB,SAAuBH,EAAUH,GAC/BO,QAAQC,IAAI,wBAEL,IAAIC,SAAQ,WAEKC,KAAKC,SAAW,GAGpCJ,QAAQC,IAAI,uBAAwCI,OAAfT,EAAS,QAAYS,OAANZ,EAAM,OAG1DO,QAAQC,IAAI,sBAAuCI,OAAfT,EAAS,QAAYS,OAANZ,EAAM,M,KAsCzDa,CAFAV,GAAY,EAEYH,GAEpBG,GAAYF,GACda,cAAcV,E,GAGfJ,E,GACFF,E","sources":["src/js/003-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  console.log('Виклик createPromise');\n\n  return new Promise(() => {\n    // delay = Number(firstDelay) + Number(delay);\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      // Reject\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n// createPromise()\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nconst formEl = document.querySelector('.form');\nconst btnEl = document.querySelector('[type=\"submit\"]');\n\nconst inputDelayEl = document.querySelector('[name=\"delay\"]');\nconst inputStepEl = document.querySelector('[name=\"step\"]');\nconst inputAmountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('input', onFormInput);\nformEl.addEventListener('submit', onBtnSubmit);\n\nfunction onFormInput(event) {\n  // const delay = inputStepEl.value;\n  // console.log(delay);\n}\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n  const firstDelay = inputDelayEl.value;\n  const delay = inputStepEl.value;\n  const amount = inputAmountEl.value;\n\n  setTimeout(() => {\n    let position = 0;\n    let intID = 0;\n    intID = setInterval(e => {\n      position += 1;\n\n      createPromise(position, delay);\n\n      if (position == amount) {\n        clearInterval(intID);\n        // return;\n      }\n    }, delay);\n  }, firstDelay);\n}\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise `);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise`);\n//   });\n"],"names":["$403bbf7d5b94fb59$var$formEl","document","querySelector","$403bbf7d5b94fb59$var$inputDelayEl","$403bbf7d5b94fb59$var$inputStepEl","$403bbf7d5b94fb59$var$inputAmountEl","addEventListener","event","preventDefault","firstDelay","value","delay","amount","setTimeout","position","intID","setInterval","e","console","log","Promise","Math","random","concat","$403bbf7d5b94fb59$var$createPromise","clearInterval"],"version":3,"file":"03-promises.41732f4a.js.map"}